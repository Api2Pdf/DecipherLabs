// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RaythaZero.Infrastructure.Persistence;

#nullable disable

namespace RaythaZero.Infrastructure.Migrations
{
    [DbContext(typeof(RaythaDbContext))]
    [Migration("20250118013102_Prompts")]
    partial class Prompts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FriendlyName")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.ApiKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<byte[]>("ApiKeyHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyHash")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("UserId");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Category");

                    b.HasIndex("CreationTime");

                    b.HasIndex("EntityId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.AuthenticationScheme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthenticationSchemeType")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeveloperName")
                        .HasColumnType("text");

                    b.Property<bool>("IsBuiltInAuth")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnabledForAdmins")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEnabledForUsers")
                        .HasColumnType("boolean");

                    b.Property<string>("JwtSecretKey")
                        .HasColumnType("text");

                    b.Property<bool>("JwtUseHighSecurity")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginButtonText")
                        .HasColumnType("text");

                    b.Property<int>("MagicLinkExpiresInSeconds")
                        .HasColumnType("integer");

                    b.Property<string>("SamlCertificate")
                        .HasColumnType("text");

                    b.Property<string>("SamlIdpEntityId")
                        .HasColumnType("text");

                    b.Property<string>("SignInUrl")
                        .HasColumnType("text");

                    b.Property<string>("SignOutUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeveloperName")
                        .IsUnique();

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("AuthenticationSchemes");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.BackgroundTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Args")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CompletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NumberOfRetries")
                        .HasColumnType("integer");

                    b.Property<int>("PercentComplete")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StatusInfo")
                        .HasColumnType("text");

                    b.Property<int>("TaskStep")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("BackgroundTasks");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.EmailTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bcc")
                        .HasColumnType("text");

                    b.Property<string>("Cc")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeveloperName")
                        .HasColumnType("text");

                    b.Property<bool>("IsBuiltInTemplate")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeveloperName")
                        .IsUnique();

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.EmailTemplateRevision", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bcc")
                        .HasColumnType("text");

                    b.Property<string>("Cc")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmailTemplateId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("EmailTemplateId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("EmailTemplateRevisions");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.JwtLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Jti")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Jti")
                        .IsUnique();

                    b.ToTable("JwtLogins");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.MediaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileStorageProvider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("ObjectKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ObjectKey");

                    b.ToTable("MediaItems");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.OneTimePassword", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OneTimePasswords");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.OrganizationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DateFormat")
                        .HasColumnType("text");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("text");

                    b.Property<string>("SmtpDefaultFromAddress")
                        .HasColumnType("text");

                    b.Property<string>("SmtpDefaultFromName")
                        .HasColumnType("text");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("text");

                    b.Property<bool>("SmtpOverrideSystem")
                        .HasColumnType("boolean");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("text");

                    b.Property<int?>("SmtpPort")
                        .HasColumnType("integer");

                    b.Property<string>("SmtpUsername")
                        .HasColumnType("text");

                    b.Property<string>("TimeZone")
                        .HasColumnType("text");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("text");

                    b.Property<string>("_CompanySetupData")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrganizationSettings");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("_ProjectData")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Prompt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeveloperName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("PromptText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResultType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeveloperName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("SystemPermissions")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeveloperName")
                        .IsUnique();

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AuthenticationSchemeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsEmailAddressConfirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoggedInTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("SsoId")
                        .HasColumnType("text");

                    b.Property<string>("_RecentlyAccessedViews")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationSchemeId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("EmailAddress")
                        .IsUnique();

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SsoId", "AuthenticationSchemeId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeveloperName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DeveloperName")
                        .IsUnique();

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.VerificationCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Code")
                        .HasColumnType("uuid");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatorUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LastModifierUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("VerificationCodeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("VerificationCodes");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<Guid>("RolesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("UserUserGroup", b =>
                {
                    b.Property<Guid>("UserGroupsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("UserGroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UserUserGroup");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.ApiKey", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "User")
                        .WithMany("ApiKeys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.AuthenticationScheme", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.EmailTemplate", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.EmailTemplateRevision", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.EmailTemplate", "EmailTemplate")
                        .WithMany("Revisions")
                        .HasForeignKey("EmailTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("EmailTemplate");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.MediaItem", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.OneTimePassword", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Project", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Prompt", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.Role", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.User", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.AuthenticationScheme", "AuthenticationScheme")
                        .WithMany()
                        .HasForeignKey("AuthenticationSchemeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("AuthenticationScheme");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.UserGroup", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.VerificationCode", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.User", "CreatorUser")
                        .WithMany()
                        .HasForeignKey("CreatorUserId");

                    b.HasOne("RaythaZero.Domain.Entities.User", "LastModifierUser")
                        .WithMany()
                        .HasForeignKey("LastModifierUserId");

                    b.Navigation("CreatorUser");

                    b.Navigation("LastModifierUser");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaythaZero.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserUserGroup", b =>
                {
                    b.HasOne("RaythaZero.Domain.Entities.UserGroup", null)
                        .WithMany()
                        .HasForeignKey("UserGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RaythaZero.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.EmailTemplate", b =>
                {
                    b.Navigation("Revisions");
                });

            modelBuilder.Entity("RaythaZero.Domain.Entities.User", b =>
                {
                    b.Navigation("ApiKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
