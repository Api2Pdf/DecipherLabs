@page "/admin/users/edit/{id}"
@model RaythaZero.Web.Areas.Admin.Pages.Users.Edit

@{
    var pageTitle = "Edit user";
    Layout = "SubActionLayout";
    ViewData["Title"] = pageTitle;
    ViewData["ActiveMenu"] = "Users";
    ViewData["ActiveSubMenu"] = "Edit";
}
@(await Html.PartialAsync("_Partials/BackToList", "/Users/Index"))
<form asp-page="/Users/Edit" method="post" class="py-4" asp-route-id="@Model.Form.Id" novalidate>
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label class="form-label raytha-required" asp-for="Form.FirstName"></label>
                @if (Model.IsAdmin)
                {
                    <input type="text" class="form-control @Model.HasError("FirstName")" asp-for="Form.FirstName" readonly>
                }
                else
                {
                    <input type="text" class="form-control @Model.HasError("FirstName")" asp-for="Form.FirstName" required>
                }
                <div class="invalid-feedback">@Model.ErrorMessageFor("FirstName")</div>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label class="form-label raytha-required" asp-for="Form.LastName"></label>
                @if (Model.IsAdmin)
                {
                    <input type="text" class="form-control @Model.HasError("LastName")" asp-for="Form.LastName" readonly>
                }
                else
                {
                    <input type="text" class="form-control @Model.HasError("LastName")" asp-for="Form.LastName" required>
                }
                <div class="invalid-feedback">@Model.ErrorMessageFor("LastName")</div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label raytha-required" asp-for="Form.EmailAddress"></label>
            @if (Model.IsAdmin)
            {
                <input type="email" class="form-control @Model.HasError("EmailAddress")" asp-for="Form.EmailAddress" readonly>
            }
            else
            {
                <input type="email" class="form-control @Model.HasError("EmailAddress")" asp-for="Form.EmailAddress" required>
            }
            <div class="invalid-feedback">@Model.ErrorMessageFor("EmailAddress")</div>
        </div>
    </div>
    @if (Model.Form.UserGroups.Any())
    {
        <div class="col-lg-12">
            <div class="mb-3">
                <span class="h6 fw-bold">User Groups</span>
            </div>

            @for (int i = 0; i < Model.Form.UserGroups.Length; i++)
            {
                <div class="form-check">
                    <input class="form-check-input @Model.HasError("UserGroups")" type="checkbox" asp-for="Form.UserGroups[i].Selected">
                    <label class="form-check-label" asp-for="Form.UserGroups[i].Selected">@Model.Form.UserGroups[i].Label</label>
                    <input type="hidden" asp-for="Form.UserGroups[i].Id" />
                    <input type="hidden" asp-for="Form.UserGroups[i].Label" />
                    @if (i == Model.Form.UserGroups.Length - 1)
                    {
                        <div class="invalid-feedback">@Model.ErrorMessageFor("UserGroups")</div>
                    }
                </div>
            }
        </div>
    }
    <input type="hidden" asp-for="Form.Id">
    <button type="submit" class="btn btn-success mt-4">Save changes</button>
</form>
