@page "/admin/settings/admins/edit/{id}"
@inject ICurrentUser CurrentUser
@model RaythaZero.Web.Areas.Admin.Pages.Admins.Edit

@{
    var pageTitle = "Edit admin";
    Layout = "SubActionLayout";
    ViewData["Title"] = pageTitle;
    ViewData["ActiveMenu"] = "Admins";
    ViewData["ActiveSubMenu"] = "Edit";
    ViewData["ExpandSettingsMenu"] = true;
}

@functions {
    public bool IsEditingMyself()
    {
        return Model.Form.Id == CurrentUser.UserId;
    }
}
@(await Html.PartialAsync("_Partials/BackToList", "/Admins/Index"))
<form asp-page="/Admins/Edit" method="post" class="py-4" asp-route-id="@Model.Form.Id" novalidate >
    <div class="row">
        <div class="col">
            <div class="mb-3">
                <label class="form-label raytha-required" asp-for="Form.FirstName"></label>
                <input type="text" class="form-control @Model.HasError("FirstName")" asp-for="Form.FirstName" required>
                <div class="invalid-feedback">@Model.ErrorMessageFor("FirstName")</div>
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label class="form-label raytha-required" asp-for="Form.LastName"></label>
                <input type="text" class="form-control @Model.HasError("LastName")" asp-for="Form.LastName" required>
                <div class="invalid-feedback">@Model.ErrorMessageFor("LastName")</div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="mb-3">
            <label class="form-label raytha-required" asp-for="Form.EmailAddress"></label>
            <input type="email" class="form-control @Model.HasError("EmailAddress")" asp-for="Form.EmailAddress" required>
            <div class="invalid-feedback">@Model.ErrorMessageFor("EmailAddress")</div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="mb-3">
            <span class="h6 fw-bold raytha-required">Roles</span>
        </div>

        @for (int i = 0; i < Model.Form.Roles.Length; i++)
        {
            <div class="form-check">
                @if (Model.Form.Roles[i].IsSuperAdmin && IsEditingMyself())
                {
                    <input class="form-check-input @Model.HasError("Roles")" type="checkbox" asp-for="Form.Roles[i].Selected" disabled>
                    <input type="hidden" asp-for="Form.Roles[i].Selected" />
                }
                else
                {
                    <input class="form-check-input @Model.HasError("Roles")" type="checkbox" asp-for="Form.Roles[i].Selected">
                }

                <label class="form-check-label" asp-for="Form.Roles[i].Selected">@Model.Form.Roles[i].Label</label>
                <input type="hidden" asp-for="Form.Roles[i].Id" />
                <input type="hidden" asp-for="Form.Roles[i].Label" />
                <input type="hidden" asp-for="Form.Roles[i].IsSuperAdmin" />
                @if (i == Model.Form.Roles.Length-1)
                {
                    <div class="invalid-feedback">@Model.ErrorMessageFor("Roles")</div>
                }
            </div>
        }
    </div>
    <input type="hidden" asp-for="Form.Id">
    <button type="submit" class="btn btn-success mt-4">Save changes</button>
</form>